name: Release

# on: [push]
on: [workflow_dispatch]

env:
  RELEASE_REVISION: "pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: default
  ECR_REPOSITORY: my-image

jobs:                                            
  release:                                       
    name: Release                                
    runs-on: ubuntu-latest                       
    steps: 
      - name: Cancel Previous Runs               
        uses: styfle/cancel-workflow-action@0.4.1
        with:                                    
          access_token: ${{ github.token }}      
      - name: Checkout                                  
        uses: actions/checkout@v2                       
        with:                                           
          ref: ${{ github.event.pull_request.head.sha }}   
      - name: Configure AWS credentials                          
        uses: aws-actions/configure-aws-credentials@v1           
        with:                                                    
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}        
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}    
      - name: Login to Amazon ECR            
        id: login-ecr                        
        uses: aws-actions/amazon-ecr-login@v1     
      - name: Set up Docker Buildx                             
        id: buildx                                             
        uses: docker/setup-buildx-action@master   
      - run: docker build --tag my-image:v1 .
      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-1
          image: my-image:v1                     
      - name: Deploy to Kubernetes cluster                                                                            
        uses: kodermax/kubectl-aws-eks@master                                                                         
        env:                                                                                                          
          RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:v1
        with:                                                                                                         
          args: set image deployment/my-pod nginx=${{ env.RELEASE_IMAGE }} --record -n $KUBE_NAMESPACE  
      - name: Send mail
        if: always()
        uses: dawidd6/action-send-mail@v2
        with:
          # mail server settings
          server_address: smtp.gmail.com
          server_port: 465
          # user credentials
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          # email subject
          subject: ${{ github.job }} job has ${{ job.status }} for ${{ github.repository }} 
          # email body as text
          body: |
            ${{ github.job }} job in worflow ${{ github.workflow }} of repository ${{ github.repository }} has ${{ job.status }}
            <${{ github.event.workflow_run.html_url }} | View workflow>
          # comma-separated string, send email to
          to: mahimasahu@mycloudbuilders.com
          # from email name
          from: chaincodedev/obortech-admin    
#       - name: Verify Kubernetes deployment                               
#         uses: kodermax/kubectl-aws-eks@master                            
#         with:                                                            
#           args: rollout status deploy my-pod -n $KUBE_NAMESPACE    
