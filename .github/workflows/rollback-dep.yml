# This workflow will rollback to specific image tag if application working is not stable

# on: [workflow_dispatch]

on:
  workflow_dispatch:
    branches: [main]

name: RollBack to specific image tag app level

env:
  IMAGE_TAG: 6e81810f06ac403fbdd655eaa12d6beb2a36b35e
  KUBE_NAMESPACE: default
  EKS_CLUSTER: myeks
  DEPLOYMENT_NAME: app
  ECR_REPOSITORY: my-image

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: staging

    steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Copy env from secrets
#       env:
#         ENV_FILE: ${{ secrets.STAGGING_ENV_FILE }}
#       run: |
#         echo $ENV_FILE | base64 --decode > .env
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-southeast-1

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Build, tag, and push image to Amazon ECR
#       id: build-image
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

#       run: |
#         # Build a docker container and
#         # push it to ECR so that it can
#         # be deployed to ECS.
#         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      # Deploy the Docker image to the EKS cluster
    - name: Deploy to EKS
      run: |
        aws eks --region ap-southeast-1 update-kubeconfig --name $EKS_CLUSTER
        #kubectl get pods -n $KUBE_NAMESPACE
        kubectl set image deployment/$DEPLOYMENT_NAME nginx=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG --record -n $KUBE_NAMESPACE
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n $KUBE_NAMESPACE
        
    - name: Rollback To Previous Deployment, if rollout status got failed
      if: failure()
      run: kubectl rollout undo deployment/$DEPLOYMENT_NAME    
