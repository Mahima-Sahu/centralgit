# This workflow will rollback to specific image tag if application working is not stable

# on: [workflow_dispatch]
 
on:
  workflow_dispatch:
    inputs:
      image_id:
        description: Enter Image tag Id for Rollback
        required: true

name: RollBack to specific image tag application level

env:
  IMAGE_TAG: ${{ github.event.inputs.image_id }}
  KUBE_NAMESPACE: default
  EKS_CLUSTER: myeks
  DEPLOYMENT_NAME: app
  ECR_REPOSITORY: my-image

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        aws eks --region us-east-1 update-kubeconfig --name $EKS_CLUSTER
        #kubectl get pods -n $KUBE_NAMESPACE
        kubectl set image deployment/$DEPLOYMENT_NAME nginx=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG --record -n $KUBE_NAMESPACE
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n $KUBE_NAMESPACE
        
    - name: Rollback To Previous Deployment, if rollout status got failed
      if: failure()
      run: kubectl rollout undo deployment/$DEPLOYMENT_NAME    
